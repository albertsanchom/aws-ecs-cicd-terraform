on:
  # workflow_dispatch:
  #   inputs:
  #     environment:
  #       type: choice
  #       description: Select the environment
  #       required: true
  #       options:
  #         - Demo
  workflow_dispatch:
  push:
    branches: [master]
    paths: [ 'terraform/**' ]
  pull_request:
    branches: [master]
    paths: [ 'terraform/**' ]

# env:
#   BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
  deploy-iac:
    name: Deploy IaC
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: Demo
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1 

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.12
      
      - name: Terraform init
        id: init
        run: terraform init
        # run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
  
      #- name: Terraform format
      #  id: fmt
      #  run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate
  
      - name: Terraform plan
        id: plan
      #  if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      
      - name: Print Terraform plan
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        run: echo "$PLAN"

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  
      - name: Terraform Apply
        #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false